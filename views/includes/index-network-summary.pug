- var colClass = "col-lg-6 px-2";
if (exchangeRates || networkVolume)
	- colClass = "col-lg-4 px-2";

if (currencyFormatTypeOverride)
	- var currencyFormatTypeInt = currencyFormatTypeOverride
else
	- var currencyFormatTypeInt = currencyFormatType;

- var utxoCalculatingDesc = "At startup the app pulls a summary of the UTXO set. Until this summary is retrieved this data can't be displayed. Wait for the summary request to your node to return, then refresh this page.";
- var currencyFormatInfo = utils.getCurrencyFormatInfo(currencyFormatTypeInt);

div.row.index-summary
	div(class=colClass)
		h5.h6 Mining

		table.table.table-borderless.table-sm.table-hover.mb-lg-0
			tbody
				tr
					th.px-2.px-lg-0.px-xl-2
						i.fas.fa-tachometer-alt.mr-1.summary-icon
						span.border-dotted(title="Estimates for global network hashrate for 1 hour / 1 day / 7 days.", data-toggle="tooltip") Hashrate
						small.ml-1 (h/d/w)
					td.text-right.text-monospace
						- var esi = utils.findBestCommonExponentScaleIndex([hashrate1h, hashrate1d, hashrate7d]);
						- var hashrate1hourData = utils.formatLargeNumber(hashrate1h, 0, esi);
						- var hashrate1dayData = utils.formatLargeNumber(hashrate1d, 0, esi);
						- var hashrate7dayData = utils.formatLargeNumber(hashrate7d, 0, esi);
						span.d-xxl-none #{hashrate1hourData[0]}
						span.d-none.d-xxl-inline #{hashrate1hourData[0]}
						small.text-muted  / 
						span.d-xxl-none #{hashrate1dayData[0]}
						span.d-none.d-xxl-inline #{hashrate1dayData[0]}
						small.text-muted  / 
						span.d-xxl-none #{hashrate7dayData[0]} 
						span.d-none.d-xxl-inline #{hashrate7dayData[0]} 
						small.border-dotted(title=`${hashrate1dayData[1].abbreviation}H = ${hashrate1dayData[1].name}-hash (x10^${hashrate1dayData[1].exponent})`, data-toggle="tooltip") #{hashrate1dayData[1].abbreviation}H/s

				tr
					th.px-2.px-lg-0.px-xl-2
						i.fas.fa-edit.mr-1.summary-icon
						span.border-dotted(title="Estimate of the number of days the current TRRXITTE hashrate would require to produce all the hashes needed to re-write the entire blockchain.", data-toggle="tooltip") Chain Rewrite Days
					td.text-right.text-monospace
						- var globalHashCount = parseInt("0x" + blockChainInfo.chainwork);
						- var rewriteDays = globalHashCount / hashrate7d / 60 / 60 / 24;
						span #{new Decimal(rewriteDays).toDecimalPlaces(1)}

				tr
					th.px-2.px-lg-0.px-xl-2
						i.fas.fa-dumbbell.mr-1.summary-icon
						span.border-dotted(title="The target difficulty that the last block, current chaintip, needed to reach to win the mining lottery", data-toggle="tooltip") Last difficulty
					td.text-right.text-monospace
						- var difficultyData = utils.formatLargeNumber(blockChainInfo.difficulty, 2);
						span.border-dotted(data-toggle="tooltip", title=parseFloat(blockChainInfo.difficulty).toLocaleString())
							span #{difficultyData[0]}
							small.px-2.px-lg-0.px-xl-2 x
							span 10
							sup #{difficultyData[1].exponent}

				if (realDifficulty)
					tr
						th.px-2.px-lg-0.px-xl-2
							i.fas.fa-dumbbell.mr-1.summary-icon
							span.border-dotted(title="The target difficutly needed to mine the next block", data-toggle="tooltip") Difficulty
						td.text-right.text-monospace
							- var difficultyData = utils.formatLargeNumber(realDifficulty, 2);
							span.border-dotted(data-toggle="tooltip", title=parseFloat(realDifficulty).toLocaleString())
								span #{difficultyData[0]}
								small.px-2.px-lg-0.px-xl-2 x
								span 10
								sup #{difficultyData[1].exponent}

					tr
						th.px-2.px-lg-0.px-xl-2
							i.fas.fa-dumbbell.mr-1.summary-icon
							span Difficulty change
						td.text-right.text-monospace
							- var difficultyChange = (realDifficulty / blockChainInfo.difficulty) - 1;
							span
								span #{new Decimal(difficultyChange * 100).toDecimalPlaces(2)} %

				tr
					th.px-2.px-lg-0.px-xl-2
						i.fas.fa-unlock.mr-1.summary-icon
						span Unconfirmed Txns
					td.text-right.text-monospace
						- var colorClass = "text-success";
						if (mempoolInfo.size > 7000)
							- colorClass = "text-warning";
						if (mempoolInfo.size > 11000)
							- colorClass = "text-danger";

						span(class=colorClass) #{mempoolInfo.size.toLocaleString()}

	div(class=colClass)
		h5.h6 Blockchain

		table.table.table-borderless.table-sm.table-hover.mb-lg-0
			tbody
				tr
					th.px-2.px-lg-0.px-xl-2
						i.fas.fa-sign-out-alt.mr-1.summary-icon
						span Total Txs
					td.text-right.text-monospace
						if (txStats && txStats.totalTxCount)
							span #{txStats.totalTxCount.toLocaleString()}
						else
							span ???

				if (blockChainInfo.size_on_disk)
					- var sizeData = utils.formatLargeNumber(blockChainInfo.size_on_disk, 2);

					tr
						th.px-2.px-lg-0.px-xl-2
							i.fas.fa-database.mr-1.summary-icon
							span Data Size
						td.text-right.text-monospace #{sizeData[0]} #{sizeData[1].abbreviation}B

				tr
					th.px-2.px-lg-0.px-xl-2
						i.fas.fa-bolt.mr-1.summary-icon
						span.border-dotted(title="The total amount of work necessary to produce the active chain, approximated in 'hashes'.", data-toggle="tooltip") Chain Work
					td.text-right.text-monospace
						- var chainworkData = utils.formatLargeNumber(parseInt("0x" + blockChainInfo.chainwork), 2);
						span.border-dotted(data-toggle="tooltip", title=`hex: ${blockChainInfo.chainwork.replace(/^0+/, '')}`)
							span #{chainworkData[0]}
							small.px-2.px-lg-0.px-xl-2 x
							span 10
							sup #{chainworkData[1].exponent}

				if (utxoSetSummary || utxoSetSummaryPending)
					tr
						th.px-2.px-lg-0.px-xl-2
							i.fas.fa-grip-horizontal.mr-1.summary-icon
							span.border-dotted(title="The number / data size of 'unspent transaction outputs' (UTXOs) in the blockchain.", data-toggle="tooltip") UTXO Set
						td.text-right.text-monospace
							if (utxoSetSummary)
								- var utxoCount = utils.formatLargeNumber(utxoSetSummary.txouts, 2);
								- var utxoDataSize = utils.formatLargeNumber(utxoSetSummary.disk_size, 2);
								span #{utxoCount[0]} #{utxoCount[1].abbreviation}
								small.text-muted  / 
								span #{utxoDataSize[0]} #{utxoDataSize[1].abbreviation}B
							else
								small.text-muted.border-dotted(title=utxoCalculatingDesc, data-toggle="tooltip") calculating...

				if (utxoSetSummary || utxoSetSummaryPending)
					tr
						th.px-2.px-lg-0.px-xl-2
							i.fab.fa-bitcoin.mr-1.summary-icon
							span Total Supply
						td.text-right.text-monospace
							if (utxoSetSummary)
								- var maxSupply = coinConfig.maxSupplyByNetwork[activeBlockchain];

								span.border-dotted(title=`${new Decimal(utxoSetSummary.total_amount).dividedBy(maxSupply).times(100).toDP(4)}% produced`, data-toggle="tooltip") #{parseFloat(utxoSetSummary.total_amount).toLocaleString()}
							else
								small.text-muted.border-dotted(title=utxoCalculatingDesc, data-toggle="tooltip") calculating...


	if (networkVolume || exchangeRates)
		div(class=colClass)
			h5.h6 Financials

			table.table.table-borderless.table-sm.table-hover.mb-lg-0
				tbody
					if (exchangeRates)
						tr
							th.px-2.px-lg-0.px-xl-2
								i.fas.fa-money-bill-wave-alt.mr-1.summary-icon
								if (currencyFormatInfo.type == "exchanged" && currencyFormatInfo.isExtendedRate)
									span.border-dotted(data-toggle="tooltip", title=("Exchange-rate data from: " + coinConfig.exchangeRateDataExtension[0].jsonUrl)) Exchange Rate
								else
									span.border-dotted(data-toggle="tooltip", title=("Exchange-rate data from: " + coinConfig.exchangeRateData.jsonUrl)) Exchange Rate
							td.text-right.text-monospace
								span #{utils.formatValueInActiveCurrency(1.0)}

					if (exchangeRates)
						tr
							th.px-2.px-lg-0.px-xl-2
								i.fab.fa-btc.mr-1.summary-icon
								span Sats Rate
							td.text-right.text-monospace
								- var satsRateData = utils.satoshisPerUnitOfActiveCurrency();
								span #{satsRateData.amt}
									small  #{satsRateData.unit}

					if (exchangeRates)
						if (utxoSetSummary || utxoSetSummaryPending)
							tr
								th.px-2.px-lg-0.px-xl-2
									i.fas.fa-globe.mr-1.summary-icon
									span Market Cap
								td.text-right.text-monospace
									if (utxoSetSummary)
										- var activeCurrency = global.currencyFormatType.length > 0 ? global.currencyFormatType : "usd";
										if (activeCurrency == "eur")
											- var xxx = utils.formatLargeNumber(parseFloat(utxoSetSummary.total_amount) * exchangeRates[activeCurrency], 1);
											span â‚¬
										else
											- var xxx = utils.formatLargeNumber(parseFloat(utxoSetSummary.total_amount) * exchangeRates["usd"], 1);
											span $

										span #{xxx[0]}
										if (xxx[1].textDesc)
											span  #{xxx[1].textDesc}
										else
											span  x 10
											sup #{xxx[1].exponent}

									else
										small.text-muted.border-dotted(title=utxoCalculatingDesc, data-toggle="tooltip") calculating...

					if (networkVolume)
						tr
							th.px-2.px-lg-0.px-xl-2
								i.fas.fa-history.mr-1.summary-icon
								span.border-dotted(title=`Total output of all transactions over the last 24 hrs (blocks: [#${networkVolume.d1.endBlock.toLocaleString()} - #${networkVolume.d1.startBlock.toLocaleString()}]).`, data-toggle="tooltip") Volume
								small.ml-1 (24h)
							td.text-right.text-monospace
								- var currencyValue = parseInt(networkVolume.d1.amt);
								- var currencyValueDecimals = 0;
								include ./value-display.pug

