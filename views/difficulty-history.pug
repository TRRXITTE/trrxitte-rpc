extends layout

block headContent
	+title('History')

block content
	h1.h3 Difficulty History
	hr

	div.card.shadow-sm.mb-3
		div.card-body
			h3.h6.mb-0 Explanation
			hr

			ul.mb-0
				li Mining difficulty adjusts automatically every block. The graphs below show the difficulty time series for the last #{coinConfig.difficultyAdjustmentBlockOffset} blocks.
				li The adjustment aims to maintain an average block-mining time of #{coinConfig.targetBlockTimeMinutes} minutes.
				li A growth in the difficulty indicates that the average block-mining time during the previous 144 blocks was less than #{coinConfig.targetBlockTimeMinutes} minutes (due to more miners joining the network and 'searching' / 'mining' for blocks).
				li A drop in difficulty indicates miners have left the network so finding each block is adjusted to be 'easier' for the smaller number remaining.
				- var daa_url = 'https://gitlab.com/bitcoin-cash-node/bchn-sw/bitcoincash-upgrade-specifications/-/blob/master/spec/2020-11-15-asert.md'
				li
					span For more details have a look at 
					a(href=daa_url) TRRXITTE DAA algorithm

	div#main-content
		div.row
			div.col
				div.card.shadow-sm.mb-3
					div.card-body
						h3.h6.mb-0 Difficulty History
						hr

						canvas(id="graph-diff-hist")

		div.row
			div.col
				div.card.shadow-sm.mb-3
					div.card-body
						h3.h6.mb-0 Difficulty Change
						hr

						canvas(id="graph-diff-change")
	


block endOfBody
	script(src="/js/chart.bundle.min.js", integrity="sha384-qgOtiGNaHh9fVWUnRjyHlV39rfbDcvPPkEzL1RHvsHKbuqUqM6uybNuVnghY2z4/")
	script.
		var data = !{JSON.stringify(data)};

		var diffHist = data.map(d => { return { x: d.h, y: d.d } });
		var diffHistAvg = data.map(d => { return { x: d.h, y: d.a } });
		createGraph("graph-diff-hist", ['Difficulty', '!{avglen} block average'], [diffHist, diffHistAvg], ['#007bff', '#FFCC42'], "Difficulty", function(options) {
			options.options.scales.yAxes[0].ticks = {
				userCallback: function(item) { return item.toExponential(); }
			};
		});

		var diffChange = data.map(d => { return { x: d.h, y: d.dd * 100 } });
		var diffChangeAvg = data.map(d => { return { x: d.h, y: d.ad * 100 } });
		createGraph("graph-diff-change", ['Difficulty Change %', '!{avglen} block average'], [diffChange, diffChangeAvg], ['#007bff', '#FFCC42'], "Difficulty Change %", function(options) {
			options.options.tooltips.mode = 'nearest';
		});

		function createGraph(graphId, names, datas, colors, yLabelStr, optionsCallback = undefined) {
			var datasets = datas.map((d, i) => {
				return {
					label: names[i],
					borderColor: colors[i],
					borderWidth: 2,
					backgroundColor: 'rgba(0,0,0,0)',
					data: d,
					pointRadius: 1
				}
			});

			var ctx = document.getElementById(graphId).getContext('2d');
			var graphOptions = {
				type: 'line',
				data: {
					datasets: datasets
				},
				options: {
					legend: {
						display: (datasets.length > 1)
					},
					scales: {
						xAxes: [{
							type: 'linear',
							position: 'bottom',
							scaleLabel: {
								display: true,
								labelString: 'Difficulty Height'
							},
						}],
						yAxes: [{
							scaleLabel: {
								display: true,
								labelString: yLabelStr
							}
						}]
					},
					tooltips: {
						mode: 'index',
						intersect: false
					}
				}
			};
			if (optionsCallback !== undefined)
				optionsCallback(graphOptions);
			var graph = new Chart(ctx, graphOptions);
		}
